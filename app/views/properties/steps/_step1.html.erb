<%= turbo_frame_tag "property_modal_content" do %>
  <div class="p-8" data-controller="property-modal">
    <!-- Step Title -->
    <div class="text-center mb-8">
      <h3 class="text-2xl font-bold text-estate-dark-800 mb-2">どのようにご利用いただけますか？</h3>
      <p class="text-estate-dark-500">物件の取引種別を選択してください</p>
    </div>

    <!-- Transaction Type Selection Form -->
    <%= form_with url: save_step1_properties_path, method: :post, local: true, 
                  data: { turbo: true }, class: "space-y-6", 
                  id: "step1_form" do |form| %>
      
      <div class="space-y-4">
        <!-- Sale Only Option -->
        <div class="radio-option">
          <%= form.radio_button :transaction_type, "sale_only", 
                                id: "sale_only", 
                                class: "peer hidden",
                                onchange: "updateRadioSelection()" %>
          <label for="sale_only" class="block cursor-pointer">
            <div class="radio-card flex items-center p-6 bg-white border-2 border-estate-warm-300 rounded-xl hover:border-estate-primary-400 transition-all duration-200">
              <div class="flex items-center">
                <div class="radio-button w-6 h-6 border-2 border-estate-warm-400 rounded-full mr-4 flex items-center justify-center">
                  <div class="radio-dot w-3 h-3 bg-white rounded-full opacity-0"></div>
                </div>
                <div>
                  <h4 class="text-lg font-semibold text-estate-dark-800 mb-1">🏠 売買のみ</h4>
                  <p class="text-estate-dark-500 text-sm">物件を売却したい</p>
                </div>
              </div>
            </div>
          </label>
        </div>

        <!-- Rent Only Option -->
        <div class="radio-option">
          <%= form.radio_button :transaction_type, "rent_only", 
                                id: "rent_only", 
                                class: "peer hidden",
                                onchange: "updateRadioSelection()" %>
          <label for="rent_only" class="block cursor-pointer">
            <div class="radio-card flex items-center p-6 bg-white border-2 border-estate-warm-300 rounded-xl hover:border-estate-primary-400 transition-all duration-200">
              <div class="flex items-center">
                <div class="radio-button w-6 h-6 border-2 border-estate-warm-400 rounded-full mr-4 flex items-center justify-center">
                  <div class="radio-dot w-3 h-3 bg-white rounded-full opacity-0"></div>
                </div>
                <div>
                  <h4 class="text-lg font-semibold text-estate-dark-800 mb-1">🏡 賃貸のみ</h4>
                  <p class="text-estate-dark-500 text-sm">物件を貸し出したい</p>
                </div>
              </div>
            </div>
          </label>
        </div>

        <!-- Both Options -->
        <div class="radio-option">
          <%= form.radio_button :transaction_type, "both", 
                                id: "both", 
                                class: "peer hidden",
                                onchange: "updateRadioSelection()" %>
          <label for="both" class="block cursor-pointer">
            <div class="radio-card flex items-center p-6 bg-white border-2 border-estate-warm-300 rounded-xl hover:border-estate-primary-400 transition-all duration-200">
              <div class="flex items-center">
                <div class="radio-button w-6 h-6 border-2 border-estate-warm-400 rounded-full mr-4 flex items-center justify-center">
                  <div class="radio-dot w-3 h-3 bg-white rounded-full opacity-0"></div>
                </div>
                <div>
                  <h4 class="text-lg font-semibold text-estate-dark-800 mb-1">🏘️ 両方検討</h4>
                  <p class="text-estate-dark-500 text-sm">売却・賃貸どちらも検討したい</p>
                </div>
              </div>
            </div>
          </label>
        </div>
      </div>

      <!-- Action Buttons -->
      <div class="flex justify-between pt-6">
        <button type="button" 
                onclick="closeModal()"
                class="bg-estate-warm-300 hover:bg-estate-warm-400 text-estate-dark-700 font-medium px-8 py-3 rounded-lg transition duration-200">
          キャンセル
        </button>
        
        <%= form.submit "次へ進む", 
                        id: "step1_submit",
                        class: "bg-estate-primary-600 hover:bg-estate-primary-700 text-white font-bold px-8 py-3 rounded-lg transition duration-200 opacity-50 cursor-not-allowed",
                        disabled: true %>
      </div>
    <% end %>
  </div>

  <script>
    // Update progress bar to step 1 immediately
    (function() {
      const progressBar = document.querySelector('[data-property-modal-target="progressBar"]');
      const stepIndicator = document.querySelector('[data-property-modal-target="stepIndicator"]');
      
      if (progressBar) {
        progressBar.style.width = '20%';
        console.log('Updated progress to 20% (Step 1)');
      }
      if (stepIndicator) {
        stepIndicator.textContent = '1 / 5';
      }
    })();

    function updateRadioSelection() {
      const submitButton = document.getElementById('step1_submit');
      const selectedRadio = document.querySelector('input[name="transaction_type"]:checked');
      
      // Update submit button
      if (selectedRadio && submitButton) {
        submitButton.disabled = false;
        submitButton.classList.remove('opacity-50', 'cursor-not-allowed');
        submitButton.classList.add('cursor-pointer');
        console.log('Radio selected:', selectedRadio.value);
      }
      
      // Update visual feedback manually since peer-checked might not work
      const allOptions = document.querySelectorAll('.radio-option');
      allOptions.forEach(option => {
        const radio = option.querySelector('input[type="radio"]');
        const card = option.querySelector('.radio-card');
        const button = option.querySelector('.radio-button');
        const dot = option.querySelector('.radio-dot');
        
        if (radio.checked) {
          // Selected state
          card.classList.remove('border-estate-warm-300');
          card.classList.add('border-estate-primary-600', 'bg-estate-primary-50');
          button.classList.remove('border-estate-warm-400');
          button.classList.add('border-estate-primary-600', 'bg-estate-primary-600');
          dot.classList.remove('opacity-0');
          dot.classList.add('opacity-100');
        } else {
          // Unselected state
          card.classList.remove('border-estate-primary-600', 'bg-estate-primary-50');
          card.classList.add('border-estate-warm-300');
          button.classList.remove('border-estate-primary-600', 'bg-estate-primary-600');
          button.classList.add('border-estate-warm-400');
          dot.classList.remove('opacity-100');
          dot.classList.add('opacity-0');
        }
      });
    }

    // Close modal function
    function closeModal() {
      console.log('Closing modal');
      
      // Clear session data
      fetch('/properties/clear_session', { method: 'DELETE' })
        .then(() => {
          console.log('Session cleared');
        })
        .catch(error => console.error('Error clearing session:', error));
      
      // Hide modal
      const modal = document.querySelector('[data-property-modal-target="modal"]');
      if (modal) {
        modal.classList.add('hidden');
        document.body.classList.remove('overflow-hidden');
        console.log('Modal closed successfully');
      } else {
        console.log('Modal element not found');
      }
    }
  </script>
<% end %>