name: CI

on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: estate_match_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      RAILS_ENV: test
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/estate_match_test
      POSTGRES_HOST: localhost
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres

    steps:
      - uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2.2
          bundler-cache: true

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install PostgreSQL Client
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client

      - name: Wait for PostgreSQL
        run: |
          echo "Waiting for PostgreSQL to be ready..."
          for i in {60..0}; do
            if pg_isready -h localhost -p 5432 -U postgres; then
              echo "PostgreSQL is ready!"
              break
            fi
            echo "PostgreSQL is unavailable - sleeping (remaining attempts: $i)"
            sleep 2
          done
          
          if [ "$i" = 0 ]; then
            echo 'PostgreSQL is still unavailable after 2 minutes - exiting'
            exit 1
          fi

      - name: Setup database
        run: |
          echo "Setting up database with PostgreSQL..."
          echo "Creating and migrating database..."
          bundle exec rails db:create
          bundle exec rails db:schema:load
          bundle exec rails db:migrate

      - name: Precompile assets
        run: bundle exec rails assets:precompile

      - name: Run RSpec tests
        run: bundle exec rspec

      # - name: Run RuboCop (linting)
      #   run: bundle exec rubocop --parallel
      #   continue-on-error: true

      # - name: Run Brakeman (security)
      #   run: bundle exec brakeman --no-pager
      #   continue-on-error: true